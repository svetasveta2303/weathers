{"version":3,"sources":["actions/actions.js","constants/const.js","components/input_index.js","components/bgi.js","reducers/reducer.js","state/index.js","conteiners/App.js","components/favorites.js","components/favorites-div.js","components/weathet-div.js","components/clock.js","components/weather.js","serviceWorker.js","index.js","router.js","img/jenuary.jpg","img/february.jpg","img/march.jpg","img/april.jpg","img/may.jpg","img/june.jpg","img/jule.jpg","img/august.jpg","img/september.jpg","img/october.jpg","img/november.jpg","img/december.jpg"],"names":["actionPending","type","status","payload","actionWather","actionError","actionFlag","actionCities","actionFavoritesCities","delay","ms","Promise","r","setTimeout","actionsWathers","loc","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","response","data","wrap","_context","prev","next","fetch","sent","json","t0","stop","this","_x","apply","arguments","Input","onInputChangeCities","e","value","target","_this","props","onClick","_this$props","titelCities","_this$props2","bgi","color","bGi","filter","s","id","style","backgroundImage","concat","img","react_default","createElement","className","onChange","placeholder","Link","to","Component","connect","state","wather","error","bindActionCreators","massMonthes","jenuary","february","march","april","may","june","jule","august","september","october","november","december","inpFatch","isFlag","favoritesCities","Date","getMonth","createStore","length","undefined","objectSpread","applyMiddleware","thunk","App","Provider","store","input_index","Favorites","localStorage","setItem","JSON","stringify","console","log","keys","map","stor","Favorites_div","click","WeatherDiv","query","results","channel","item","forecast","str","key","date","high","low","react_spinners","sizeUnit","size","loading","Clock","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","tick","setState","_this2","setInterval","toLocaleTimeString","Wather","city","count","location","favorites","condition","temp","clock","weathet_div","favorites_div","Boolean","window","hostname","match","ReactDOM","render","BrowserRouter","es","stores","Switch","Route","path","exact","component","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.a0d187c7.chunk.js","sourcesContent":["import * as types from \"../constants/const.js\";\r\n\r\n\r\nexport  const actionPending     = () => ({\r\n    type: types.SET_STATUS,\r\n    status: 'PENDING',\r\n    payload: null });\r\nexport  const actionWather =payload   =>({\r\n    type:types.SET_WATHER,\r\n    status:'SET_WATHER',\r\n    payload })\r\nexport  const actionError    = payload  => ({\r\n    type: types.REJECTED,\r\n    status: 'REJECTED',\r\n    payload  });\r\nexport  const actionFlag  = payload  =>({\r\n    type:types.FLAG,\r\n    status: 'FLAG',\r\n    payload });\r\nexport  const actionCities  = payload  =>({\r\n    type:types.SET_CITIES,\r\n    status: 'SET_CITIES',\r\n    payload });\r\nexport  const actionFavoritesCities  = payload  =>({\r\n    type:types.SET_CITIES_FAVORITES,\r\n    payload });\r\n\r\nexport const actionsBgi = payload =>({\r\ntype:types.SET_COLOR,\r\npayload\r\n})\r\nconst delay =ms=> new Promise(r=>setTimeout(r, ms));\r\n\r\nexport function actionsWathers(loc){\r\n    return async function (dispatch){\r\n        dispatch(actionPending())\r\n        await delay(3000)\r\n        try {\r\n            let response = await fetch('https://query.yahooapis.com/v1/public/yql?q=select%20*%20from%20weather.forecast%20where%20woeid%20in%20(select%20woeid%20from%20geo.places(1)%20where%20text%3D%22'+ loc +`%22)%20and%20u%3D'c'&format=json&env=store%3A%2F%2Fdatatables.org%2Falltableswithkeys`)\r\n            let data     = await response.json()\r\n\r\n            dispatch(actionWather(data))\r\n            dispatch(actionFlag(false))\r\n        }\r\n        catch (e) {\r\n            dispatch(actionError(e))\r\n        }\r\n    }\r\n}\r\n\r\n\r\n","\r\n\r\nexport const SET_STATUS = 'SET_STATUS';\r\nexport const SET_WATHER = 'SET_WATHER'\r\nexport const FLAG = 'FLAG';\r\nexport const DELETE =\"DELETE\"\r\nexport const REJECTED =\"REJECTED\"\r\nexport const SET_CITIES_FAVORITES = 'SET_CITIES_FAVORITES';\r\nexport const SET_CITIES = 'SET_CITIES';\r\nexport const SET_COLOR = 'SET_COLOR';","import React, { Component } from 'react';\r\nimport {actionCities,actionsWathers,} from \"../actions/actions.js\";\r\nimport { bindActionCreators} from 'redux';\r\nimport { connect }   from 'react-redux';\r\nimport {Link} from 'react-router-dom';\r\n\r\n\r\n class Input  extends Component {\r\n\r\n\r\n    onInputChangeCities = e => {\r\n \t\tconst { value } = e.target;\r\n        this.props.actionCities(value)\r\n\r\n\t};\r\n\r\n    onClick = () => {\r\n        const {titelCities, actionsWathers} =this.props\r\n        actionsWathers(titelCities)\r\n        \r\n\r\n    }\r\n    render() { \r\n        const{bgi, color} = this.props\r\n        const bGi = bgi.filter(s=>s.id === color)[0]\r\n        const style = {backgroundImage: `url(${bGi.img})`}\r\n        return (\r\n\r\n            <div className =\"Input\" style ={style} >\r\n                <div className=\"input-group Form\">\r\n                    <input className = \"Input-clas\" onChange = {this.onInputChangeCities}  placeholder= \"Город\"  /><br></br>\r\n                    <Link to='/weather'>\r\n                        <button className = \"btn-in\" onClick = { this.onClick } >Узнать погоду</button>\r\n                    </Link>\r\n                </div>\r\n            </div>\r\n    )\r\n    }\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({actionCities,actionsWathers }, dispatch);\r\n}\r\nconst mapStateToProps = state =>\r\n    ({\r\n    titelCities:state.titelCities,\r\n    wather:state.wather,\r\n    error:state.error,\r\n    color:state.color,\r\n    bgi:state.bgi\r\n})\r\n\r\n\r\nInput = connect(mapStateToProps, mapDispatchToProps )(Input)\r\n\r\nexport default  Input","import jenuary from \"../img/jenuary.jpg\";\r\nimport february from \"../img/february.jpg\";\r\nimport march from \"../img/march.jpg\";\r\nimport april from \"../img/april.jpg\";\r\nimport may from \"../img/may.jpg\";\r\nimport june from \"../img/june.jpg\";\r\nimport jule from \"../img/jule.jpg\";\r\nimport august from \"../img/august.jpg\";\r\nimport september from \"../img/september.jpg\";\r\nimport october from \"../img/october.jpg\";\r\nimport november from \"../img/november.jpg\";\r\nimport december from \"../img/december.jpg\";\r\n\r\n const massMonthes = [\r\n    {\r\n        id:1,\r\n       img:jenuary\r\n   },\r\n     {\r\n         id:2,\r\n        img:february\r\n    },\r\n    {\r\n        id:3,\r\n        img:march\r\n    },\r\n    {\r\n        id:4,\r\n        img:april\r\n    },\r\n    {\r\n        id:5,\r\n        img:may\r\n    },\r\n    {\r\n        id:6,\r\n        img:june\r\n    },\r\n    {\r\n        id:7,\r\n        img:jule\r\n    },\r\n    {\r\n        id:8,\r\n        img:august\r\n    },\r\n    {\r\n        id:9,\r\n        img:september\r\n    },\r\n    {\r\n        id:10,\r\n        img:october\r\n    },\r\n    {\r\n        id:11,\r\n       img:november\r\n    },\r\n    {\r\n        id:12,\r\n        img:december\r\n    }\r\n    \r\n]\r\n\r\nexport default massMonthes","import massMonthes from \"../components/bgi.js\"\r\nimport * as types from \"../constants/const\";\r\nconst inpFatch= {\r\n    wather:null,\r\n    error:null,\r\n    isFlag: true,\r\n    favoritesCities:[],\r\n    color:new Date().getMonth()+1,\r\n    bgi:massMonthes,\r\n    titelCities:'',\r\n}\r\n\r\nexport default (state = inpFatch, {type, payload  }) => {\r\n    switch (type) {\r\n\t\tcase types.SET_STATUS: {\r\n\t\t\treturn {\r\n\t\t\t\t...state\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase types.SET_WATHER: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\twather: payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase types.REJECTED: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\terror: payload\r\n\t\t\t};\r\n\t\t}\r\n\t\tcase types.FLAG: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tisFlag: payload\r\n\t\t\t};\r\n        }\r\n        case types.SET_CITIES: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\ttitelCities: payload\r\n\t\t\t};\r\n        }\r\n        case types.SET_CITIES_FAVORITES: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tfavoritesCities: payload\r\n\t\t\t};\r\n        }\r\n        case types.SET_COLOR: {\r\n\t\t\treturn {\r\n\t\t\t\t...state,\r\n\t\t\t\tbgi: payload\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tdefault:\r\n\t\t\treturn state;\r\n\t}\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport store from '../reducers/reducer'\r\nimport thunk from 'redux-thunk';\r\n\r\n\r\nexport default createStore(\r\n    store,\r\n    applyMiddleware(thunk)\r\n)\r\n\r\n\r\n\r\n\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport Input from '../components/input_index.js'\nimport store from \"../state\";\nimport Provider from \"react-redux/es/components/Provider\";\n\nclass App extends Component {\n    render() {\n        return (\n            <div className=\"App\">\n            <Provider store ={store}>\n            <Input/>\n\n        </Provider>\n\n        </div>\n    );\n    }\n}\n\nexport default App;\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from \"redux\";\r\nimport {actionFavoritesCities,} from \"../actions/actions\";\r\n\r\n\r\nclass Favorites extends Component {\r\n\r\n   onClick =()=>{\r\n        const {titelCities,actionFavoritesCities} = this.props\r\n            if(titelCities !== \"\") {\r\n                localStorage.setItem(titelCities, JSON.stringify(titelCities))\r\n            }\r\n            else{\r\n                console.log(\"Error\")\r\n            }\r\n            Object.keys(localStorage).map(stor=>\r\n                actionFavoritesCities(stor)\r\n            )\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n            <span className =\"icon-star-o\" onClick = {this.onClick}>\r\n            </span>\r\n            </div>\r\n\r\n        )    \r\n    }\r\n    }\r\n\r\nconst mapStateToProps = state =>\r\n    ({\r\n        titelCities:state.titelCities,\r\n        favoritesCities:state.favoritesCities,\r\n    })\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({actionFavoritesCities}, dispatch);\r\n}\r\nFavorites = connect(mapStateToProps,mapDispatchToProps )(Favorites);\r\nexport default Favorites","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from \"redux\";\r\nimport { actionsWathers,actionFlag} from \"../actions/actions\";\r\n\r\n\r\nclass Favorites_div extends Component {\r\n\r\n    render() {\r\n        return (\r\n           \r\n            <div className =\"Favorites\" >{Object.keys(localStorage).map(stor=><button className =\"Favorites_div\" id ={stor} onClick = {click=>{\r\n    const {actionsWathers,actionFlag}=this.props\r\n            actionFlag(true)\r\n            actionsWathers(stor)\r\n            console.log(this.props)\r\n            }\r\n        }>{stor}<br/></button>)}</div>\r\n    )\r\n    }\r\n}\r\n\r\n\r\n\r\n    function mapDispatchToProps(dispatch) {\r\n    return bindActionCreators({actionsWathers,actionFlag }, dispatch);\r\n}\r\nconst mapStateToProps = state =>({\r\n    isFlag:state.isFlag,\r\n    wather:state.wather,\r\n    favoritesCities:state.favoritesCities,\r\n   \r\n})\r\n    Favorites_div = connect(mapStateToProps, mapDispatchToProps )(Favorites_div)\r\n\r\n export default Favorites_div","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Favorites_div from \"./favorites-div\";\r\nimport { RingLoader} from 'react-spinners';\r\n\r\n\r\n\r\nclass WeatherDiv extends Component{\r\n\r\n    render() {\r\n        const {isFlag, wather} = this.props\r\n        return(\r\n                <div className =\"Wath\">\r\n                    <ul>\r\n                        <h2>{wather!==null? \"Дата\":null}</h2>\r\n                        {wather&&wather.query&&wather.query.results&&wather.query.results.channel.item.forecast.map(str =><div className=\"wather\" key ={str.date}> {str.date}</div>) }\r\n                    </ul>\r\n                    <ul>\r\n                        <h2>{wather !==null? \"Температура днем\":null}</h2>\r\n                            { wather&&wather.query&&wather.query.results&&wather.query.results.channel.item.forecast.map(str =><div className=\"wather\" key ={str.date}> {str.high}</div>) }\r\n                    </ul>\r\n                    <ul>\r\n                        <h2>{wather !==null? \"Температура ночью\":null}</h2>\r\n                            { wather&&wather.query&&wather.query.results&&wather.query.results.channel.item.forecast.map(str =><div className=\"wather\" key ={str.date}>{str.low}</div>) }\r\n                    </ul>\r\n                    <RingLoader className={\"margin: 0 auto\"}\r\n                        sizeUnit={\"px\"}\r\n                        size={150}\r\n                        color={'#123abc'} loading={isFlag}/> \r\n                </div>\r\n                )\r\n                }\r\n            }\r\n            const mapStateToProps = state => ({\r\n                isFlag:state.isFlag,\r\n                    wather:state.wather,\r\n                    error:state.error,\r\n            })\r\n\r\n            WeatherDiv = connect(mapStateToProps)(WeatherDiv)\r\n\r\n\r\n\r\n            export default WeatherDiv","import React, { Component } from 'react';\r\n\r\nclass Clock extends Component{\r\nconstructor(props){\r\n    super(props)\r\n    this.state ={date: new Date()}\r\n}\r\ncomponentDidMount() {\r\n     setInterval(\r\n      () => this.tick(),\r\n      1000\r\n    );\r\n  }\r\n  tick=()=> {\r\n    this.setState(this.setState({\r\n        date: new Date()\r\n      }));\r\n  }\r\n    render() {\r\n        return(\r\n            <div className=\"Clock\">\r\n                <h1>\r\n            {this.state.date.toLocaleTimeString()}\r\n            </h1>\r\n            </div>\r\n        )\r\n    }\r\n}       \r\n        export default Clock","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux'\r\nimport Favorites from \"./favorites\";\r\nimport Favorites_div from \"./favorites-div\";\r\nimport {Link} from \"react-router-dom\";\r\nimport WeatherDiv from \"./weathet-div\"\r\nimport Clock from './clock.js';\r\nimport {bindActionCreators} from \"redux\";\r\nimport { actionError} from \"../actions/actions\";\r\nimport { RingLoader} from 'react-spinners';\r\n\r\n\r\nclass Wather extends Component{\r\n    \r\n    city = () =>{\r\n        const {error, wather,actionError} = this.props\r\n        if (wather === null){\r\n            actionError(\"Нет такого города, введите снова\")\r\n            return error\r\n        }\r\n            else if (wather.error){\r\n                actionError(\"Нет такого города, введите снова\")\r\n                return error\r\n            }\r\n            else if (wather.query.count ===0){\r\n                actionError(\"Нет такого города, введите снова\")\r\n                return error\r\n            }\r\n                else{\r\n                return wather.query.results&&wather.query.results.channel&&wather.query.results.channel.location.city\r\n                }\r\n    }\r\n    render() {\r\n        const {wather,isFlag} = this.props\r\n        return(\r\n        < div className =\"Wather\">\r\n            <div className = \"ThisWeather\">\r\n                <div className =\"city\">\r\n                    <h1>\r\n                        {this.city()}\r\n                        <Favorites/>\r\n                    </h1>\r\n                </div>\r\n                <div className = \"temp\">{wather&&wather.query&&wather.query.results&&wather.query.results.channel.item.condition.temp}</div>\r\n                    <Link to='/'>\r\n                                <button className = \"btn\"  >\r\n                                    Узнать погоду\r\n                                </button>\r\n                    </Link>\r\n                        <Clock/>\r\n                </div>\r\n            <WeatherDiv/>\r\n            <Favorites_div/>\r\n                           \r\n        </div>\r\n                )\r\n\r\n            }\r\n            }\r\n\r\n            const mapStateToProps = state => ({\r\n                titelCities:state.titelCities,\r\n                    wather:state.wather,\r\n                    error:state.error,\r\n                    isFlag:state.isFlag\r\n            })\r\n            function mapDispatchToProps(dispatch) {\r\n                return bindActionCreators({actionError }, dispatch);\r\n            }\r\n            Wather = connect(mapStateToProps,mapDispatchToProps)(Wather)\r\n\r\n\r\n\r\n            export default Wather","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport ReactDOM from 'react-dom';\nimport Router from \"./router\";\nimport './index.css';\nimport stores from \"./state/index\";\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n<BrowserRouter>\n<Provider store={stores}>\n    <Router />\n    </Provider>\n    </BrowserRouter>,\ndocument.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from \"react\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport App from \"./conteiners/App.js\";\r\nimport Wather from \"./components/weather.js\";\r\n\r\nexport default () => (\r\n    <Switch>\r\n    <div>\r\n    <Route path=\"/\" exact component={App} />\r\n<Route path=\"/weather\" component={Wather} />\r\n    </div>\r\n</Switch>\r\n);","module.exports = __webpack_public_path__ + \"static/media/jenuary.db19a56c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/february.0274c64f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/march.d9fe17df.jpg\";","module.exports = __webpack_public_path__ + \"static/media/april.e9815b51.jpg\";","module.exports = __webpack_public_path__ + \"static/media/may.09fd2216.jpg\";","module.exports = __webpack_public_path__ + \"static/media/june.78d6b06f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/jule.b75f09ff.jpg\";","module.exports = __webpack_public_path__ + \"static/media/august.b38854d7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/september.f3367c82.jpg\";","module.exports = __webpack_public_path__ + \"static/media/october.db928407.jpg\";","module.exports = __webpack_public_path__ + \"static/media/november.191fdaa4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/december.114bd59b.jpg\";"],"sourceRoot":""}